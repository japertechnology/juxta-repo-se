name: juxta-repo-arrange

on:
  push:
    paths:
      - '.github/juxta-repo.txt'
  workflow_dispatch:

permissions:
  contents: write   # allow this job to push snapshots back

defaults:
  run:
    shell: bash

jobs:
  clone:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Ensure .github/juxta-repo.txt has Unix line endings
        run: |
          if command -v dos2unix &> /dev/null; then dos2unix .github/juxta-repo.txt
          else sed -i 's/\r$//' .github/juxta-repo.txt; fi

      - name: Prepare snapshot directory
        run: |
          mkdir -p repository
          [ -d repository ] && ! [ -L repository ] || { echo "Safety check failed"; exit 1; }
          rm -rf repository/* repository/.[!.]* repository/..?*   # start from a clean slate

      - name: Validate repository list
        env:
          MULTI_REPO_TOKEN: ${{ secrets.JUXTA_REPO_PERMISSION }}
        run: scripts/validate-repos.sh .github/juxta-repo.txt

      - name: Shallow‑clone every repo in juxta-repo.txt
        env:
          MULTI_REPO_TOKEN: ${{ secrets.JUXTA_REPO_PERMISSION }}
        run: ./scripts/clone-all.sh

      # 5 – Strip Git metadata so only a snapshot remains
      - name: Remove Git metadata from clones
        run: find repository -name .git -type d -prune -exec rm -rf '{}' +

      # 6 – Commit the fresh snapshots back to this repo
      - name: Commit cloned repos
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add repository
          if git diff --cached --quiet; then
            echo "✨ No changes to commit"
          else
            git commit -m "Add latest snapshots of repos/"
            git push
          fi
