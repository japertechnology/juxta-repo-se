name: juxta-repo-arrange

on:
  push:
    paths:
      - '.github/juxta-repo.txt'
  workflow_dispatch:

permissions:
  contents: write   # allow this job to push snapshots back

defaults:
  run:
    shell: bash

jobs:
  clone:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: true

      - name: Ensure .github/juxta-repo.txt has Unix line endings
        run: |
          if command -v dos2unix &> /dev/null; then dos2unix .github/juxta-repo.txt
          else sed -i 's/\r$//' .github/juxta-repo.txt; fi

      - name: Prepare snapshot directory
        run: |
          mkdir -p repository
          rm -rf repository/* repository/.[!.]* repository/..?*   # start from a clean slate

      - name: Shallow‑clone every repo in juxta-repo.txt
        env:
          MULTI_REPO_TOKEN: ${{ secrets.JUXTA_REPO_PERMISSION }}
        run: |
          set -euo pipefail
          shopt -s extglob

          export GIT_ASKPASS="$(mktemp)"
          cat > "$GIT_ASKPASS" <<'EOF'
#!/bin/sh
case "$1" in
  Username*) echo "x-access-token" ;;
  Password*) echo "$MULTI_REPO_TOKEN" ;;
esac
EOF
          chmod +x "$GIT_ASKPASS"
          export GIT_TERMINAL_PROMPT=0

          while IFS= read -r repo || [[ -n $repo ]]; do
            # Trim whitespace and ignore blanks / comments
            repo="${repo//$'\r'/}"
            repo="${repo##*( )}"; repo="${repo%%*( )}"
            [[ -z "$repo" || "$repo" =~ ^# ]] && continue

            # Build full HTTPS URL (accepts owner/name or full URL)
            if [[ $repo =~ ^https?:// ]]; then
              url="$repo"
            else
              url="https://github.com/$repo.git"
            fi

            # Clone into repository/<repo‑name>
            target="repository/$(basename "$url" .git)"
            echo "➤ Cloning $url → $target"
            if ! output=$(git clone --depth 1 "$url" "$target" 2>&1); then
              echo "$output" | sed 's/'"$MULTI_REPO_TOKEN"'/[REDACTED]/g' >&2
              echo "❌ Failed to clone $repo" >&2
              continue
            fi
          done < .github/juxta-repo.txt

      # 5 – Strip Git metadata so only a snapshot remains
      - name: Remove Git metadata from clones
        run: find repository -name .git -type d -prune -exec rm -rf '{}' +

      # 6 – Commit the fresh snapshots back to this repo
      - name: Commit cloned repos
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add repository
          if git diff --cached --quiet; then
            echo "✨ No changes to commit"
          else
            git commit -m "Add latest snapshots of repos/"
            git push
          fi
